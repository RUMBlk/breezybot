//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "candidates")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub election: i64,
    #[sea_orm(column_type = "Text")]
    pub user: String,
    pub banned_until: Option<DateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::elections::Entity",
        from = "Column::Election",
        to = "super::elections::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Elections,
    #[sea_orm(has_many = "super::votes::Entity")]
    Votes,
}

impl Related<super::elections::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Elections.def()
    }
}

impl Related<super::votes::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Votes.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
